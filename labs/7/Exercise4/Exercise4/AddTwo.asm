; Exercise 4: memory access using PTR Operator

.386
.model flat,stdcall
.stack 4096
ExitProcess proto,dwExitCode:dword

.data
	varB BYTE	65h, 31h, 02h, 05h
	varW WORD	6543h, 1202h
	varD DWORD	12345678h

.code
main proc

	mov eax, 0 ; debug purpose only
	mov ebx, 0 ; debug purpose only
	mov ecx, 0 ; debug purpose only

	mov ax, WORD PTR varB+2
	;=========================================================
	; varB BYTE	65h, 31h, 02h, 05h
	;
	;  00  01  02  03  
	; +---+---+---+---+
	; | 65| 31| 02| 05|
	; +---+---+---+---+
	;          reg <--|
	;
	; AX = 05 02
	;=========================================================

	mov bl, BYTE PTR varW+3
	;=========================================================
	; varW WORD	6543h, 1202h
	;
	;  00  01  02  03  
	; +---+---+---+---+
	; | 43| 65| 02| 12|
	; +---+---+---+---+
	;
	; BL = 12
	;=========================================================

	mov cx, WORD PTR varD+2
	;=========================================================
	; varD DWORD 12 34 56 78h
	;
	;  00  01  02  03  
	; +---+---+---+---+
	; | 78| 56| 34| 12|
	; +---+---+---+---+
	;          reg <--|
	;
	; CX =  12 34
	;=========================================================

	mov ebx, DWORD PTR varW+2
	;=========================================================
	; varW WORD	6543h, 1202h
	; varD DWORD 12 34 56 78h
	;
	;  00  01  02  03     00  01  02  03 
	; +---+---+---+---+   +---+---+---+---+
	; | 43| 65| 02| 12|   | 78| 56| 34| 12|
	; +---+---+---+---+   +---+---+---+---+
	;         |       EBX         |
	; 
	; EBX = 56 78 12 02
	;=========================================================

	invoke ExitProcess,0
main endp
end main