Microsoft (R) Macro Assembler Version 14.16.27035.0	    04/04/20 19:23:53
AddTwo.asm						     Page 1 - 1


				; Problem 3
				; Multiplication and Division Instructions
				; var4 = (var1 * -5) / (-var2 / var3)
				; var4 = (-2 * -5) / (-20 / 2)
				; var4 = (10) / (-10)
				; var4 = -1
				;
				;CDQ (convert doubleword to quadword) extends EAX into EDX

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 00000000 FFFFFFFE			var1	SDWORD -2
 00000004 00000014			var2	SDWORD	20
 00000008 00000002			var3	SDWORD	2
 0000000C 00000000			var4	SDWORD	?

 00000000			.code
 00000000			main proc
 00000000  B8 00000000			mov eax,0		; debug purpose only
 00000005  BB 00000000			mov ebx,0		; debug purpose only
 0000000A  BA 00000000			mov edx,0		; debug purpose only

					;=====================================================
					; (-var2 / var3);
					;=====================================================
 0000000F  A1 00000004 R		mov eax,var2		; EAX : 00 00 00 14
 00000014  F7 D8			neg eax				; EAX : FF FF FF EC	(-var2)

 00000016  99				cdq					; sign-extend dividend
 00000017  F7 3D 00000008 R		idiv var3			; EDX = remainder
					;=====================================================
					; EAX : FF FF FF F6		(-10d)
					; EDX : 00 00 00 00
					;=====================================================
 0000001D  8B D8			mov ebx,eax			; EBX = right side

					;=====================================================
					; (var1 * -5)
					;=====================================================
 0000001F  B8 FFFFFFFB			mov eax,-5			; begin left side (EAX = FF FF FF FB)
 00000024  F7 2D 00000000 R		imul var1			; EAX = 00 00 00 0A

 0000002A  F7 FB			idiv ebx			; final division
 0000002C  A3 0000000C R		mov var4,eax		; quotient
					;======================================================
					; var4 = FF FF FF FF	(-1d)
					;======================================================

					invoke ExitProcess,0
 00000031  6A 00	   *	    push   +000000000h
 00000033  E8 00000000 E   *	    call   ExitProcess
 00000038			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27035.0	    04/04/20 19:23:53
AddTwo.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000010 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000038 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000038 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
var1 . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
var2 . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
var3 . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
var4 . . . . . . . . . . . . . .	DWord	 0000000C _DATA	

	   0 Warnings
	   0 Errors
