Microsoft (R) Macro Assembler Version 14.16.27035.0	    03/06/20 09:26:33
AddTwo.asm						     Page 1 - 1


				; Write and run a program and answer the questions in the box
				; Summing an Array (SumArray.asm)

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 00000000 00010000			intarray  DWORD 10000h,20000h,30000h,40000h
	   00020000
	   00030000
	   00040000
 00000010 00000000 R			myPointer DWORD intarray

 00000000			.code

 00000000			main proc

					;mov edi,OFFSET intarray			; 1: EDI = address of intarray
 00000000  8B 3D 00000010 R		mov edi,myPointer					; 1: EDI = address of intarray
					
 00000006  B9 00000004			mov ecx,LENGTHOF intarray			; 2: initialize loop counter
 0000000B  B8 00000000			mov eax,0							; 3: sum = 0

 00000010				L1:									; 4: mark beginning of loop
 00000010  03 07				add eax,[edi]					; 5: add an integer
 00000012  83 C7 04				add edi,TYPE intarray			; 6: point to next element
 00000015  E2 F9				loop L1							; 7: repeat until ECX = 0

					;=================================
					;    EAX = 00 0A 00 00
					;=================================

					;==========================================================================================
					; What will be the value of EAX if the square brackets around EDI register are removed?
					; 
					;    Memory addresses 
					;        step 0
					;           edi         :  
					;           eax         :
					;           mypointer   : 00 40 40 10
					;      
					;=============================================================================
 00000017  B9 00000004			mov ecx,LENGTHOF intarray			; 2: initialize loop counter
 0000001C  B8 00000000			mov eax,0							; 3: sum = 0

 00000021				L2:									; 4: mark beginning of loop
 00000021  03 C7				add eax,edi						; 5: add an integer
 00000023  83 C7 04				add edi,TYPE intarray			; 6: point to next element
 00000026  E2 F9				loop L2							; 7: repeat until ECX = 0

					; +--------------------+--------------+-------------+
					; | step | eax         |  edi         | mypointer   |
					; -------+-------------+--------------+-------------+
					; |   0  | 00 00 00 00 | 00 40 40 10  | 00 40 40 10 |
					; +------+-------------+--------------+-------------+
					; |   1  | 00 40 40 10 | 00 40 40 14  | 00 40 40 10 |
					; +------+-------------+--------------+-------------+
					; |   2  | 00 80 80 24 | 00 40 40 18  | 00 40 40 10 |
					; +------+-------------+--------------+-------------+
					; |   3  | 00 C0 C0 3C | 00 40 40 1C  | 00 40 40 10 |
					; +------+-------------+--------------+-------------+
					; |   4  | 01 01 00 58 | 00 40 40 20  | 00 40 40 10 |
					; +------+-------------+--------------+-------------+

					;=================================
					;    EAX = 01 01 00 58
					;=================================
						

					invoke ExitProcess,0
 00000028  6A 00	   *	    push   +000000000h
 0000002A  E8 00000000 E   *	    call   ExitProcess
 0000002F			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27035.0	    03/06/20 09:26:33
AddTwo.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000014 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000002F DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000002F Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000010 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000021 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
intarray . . . . . . . . . . . .	DWord	 00000000 _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000010 _DATA	

	   0 Warnings
	   0 Errors
