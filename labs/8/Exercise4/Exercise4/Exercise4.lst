Microsoft (R) Macro Assembler Version 14.16.27035.0	    03/06/20 09:35:08
AddTwo.asm						     Page 1 - 1


				; Exercise 4
				; Write and run a program and answer the questions in the box.

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 00000000 00000000			temp dword ?

 00000000			.code
 00000000			main proc

 00000000  B8 00000000			mov eax, 0
 00000005  B9 0000000A			mov ecx,10			; outer loop counter
					
 0000000A				L1:
 0000000A  B8 00000003				mov eax,3
 0000000F  89 0D 00000000 R			mov temp,ecx
 00000015  B9 00000005				mov ecx,5		; inner loop counter

 0000001A					L2:
 0000001A  83 C0 05					add eax,5
 0000001D  E2 FB					loop L2			; repeat inner loop
						
 0000001F  8B 0D 00000000 R			mov ecx, temp
 00000025  E2 E3				loop L1 ; repeat outer loop

						;===============================
						;  First : Trace ECX, EAX
						;===============================
						;  +---------+--------+--------+
						;  | EAX     | ECX	  | temp   |
						;  +---------+--------+--------+
						;  |  0d     |  10d   |  0d    |
						;  +---------+--------+--------+
						;  |  3d     |  5d    |  10d   |
						;  +---------+--------+--------+
						;  |  8d     |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  10d   |        |
						;  +---------+--------+--------+
						;  |         |  9d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  9d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  9d    |        |
						;  +---------+--------+--------+
						;  |         |  8d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  8d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  8d    |        |
						;  +---------+--------+--------+
						;  |         |  7d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  7d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  7d    |        |
						;  +---------+--------+--------+
						;  |         |  6d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  6d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  6d    |        |
						;  +---------+--------+--------+
						;  |         |  5d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  5d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  5d    |        |
						;  +---------+--------+--------+
						;  |         |  4d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  4d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  4d    |        |
						;  +---------+--------+--------+
						;  |         |  3d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  3d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  3d    |        |
						;  +---------+--------+--------+
						;  |         |  2d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  2d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  2d    |        |
						;  +---------+--------+--------+
						;  |         |  1d    |        |
						;  +---------+--------+--------+
						;  |   3d    |  5d    |  1d    |
						;  +---------+--------+--------+
						;  |   8d    |  4d    |        |
						;  +---------+--------+--------+
						;  |  13d    |  3d    |        |
						;  +---------+--------+--------+
						;  |  18d    |  2d    |        |
						;  +---------+--------+--------+
						;  |  23d    |  1d    |        |
						;  +---------+--------+--------+
						;  |  28d    |  0d    |        |
						;  +---------+--------+--------+
						;  |         |  1d    |        |
						;  +---------+--------+--------+
						;  |         |  0d    |        |
						;  +---------+--------+--------+

						;==============================================================
						;  Second : If we removed mov ecx, temp, What will happen?
						;==============================================================
 00000027  B8 00000000				mov eax, 0
 0000002C  B9 0000000A				mov ecx,10			; outer loop counter
 00000031  C7 05 00000000 R			mov temp,0
	   00000000
					
						;L3:
						;	mov eax,3
						;	mov temp,ecx
						;	mov ecx,5		; inner loop counter
						;
						;	L4:
						;		add eax,5
						;		loop L4			; repeat inner loop
						;
						;	;removing this line -> mov ecx, temp
						;	loop L3 ; repeat outer loop

				        ;=============================================
						; Infinity loop issue : loop never ends.
						; LOOP 
						;    - Subtract one from ECX
						;    - Check if ECX is zero
						;
						; +---------+--------+--------+
						; | EAX     | ECX	 | temp   |
						; +---------+--------+--------+
						; |  0d     | 10d    |  0d    |
						; +---------+--------+--------+
						; |  3d     |  5d    |  10d   |
						; +---------+--------+--------+
						; |  8d     |  4d    |        |
						; +---------+--------+--------+
						; |  13d    |  3d    |        |
						; +---------+--------+--------+
						; |  18d    |  2d    |        |
						; +---------+--------+--------+
						; |  23d    |  1d    |        |
						; +---------+--------+--------+
						; |  28d    |  0d    |        |
						; +---------+--------+--------+
						; |         |  -1d   |        |
						; +---------+--------+--------+
						; |  3d     |  5d    |  -1d   |
						; +---------+--------+--------+
						; |  8d     |  4d    |        |
						; +---------+--------+--------+
						; |  13d    |  3d    |        |
						; +---------+--------+--------+
						; |  18d    |  2d    |        |
						; +---------+--------+--------+
						; |  23d    |  1d    |        |
						; +---------+--------+--------+
						; |  28d    |  0d    |        |
						; +---------+--------+--------+
						; |         |  -1d   |        |
						; +---------+--------+--------+
						; |  3d     |  5d    |  -1d   |
						; +---------+--------+--------+
						; Stopped the program at this point


						;==============================================================================
						;  Third : Replace mov temp,ecx with push exc and mov ecx, temp with pop ecx
						;=============================================================================
 0000003B  B8 00000000				mov eax, 0
 00000040  B9 0000000A				mov ecx,10			; outer loop counter
 00000045  C7 05 00000000 R			mov temp,0
	   00000000
					
 0000004F					L5:
 0000004F  B8 00000003					mov eax,3
 00000054  51						push ecx		;mov temp,ecx
 00000055  B9 00000005					mov ecx,5		; inner loop counter

 0000005A						L6:
 0000005A  83 C0 05						add eax,5
 0000005D  E2 FB						loop L6			; repeat inner loop
						
 0000005F  59						pop ecx				;mov ecx, temp
 00000060  E2 ED					loop L5 ; repeat outer loop


					invoke ExitProcess,0
 00000062  6A 00	   *	    push   +000000000h
 00000064  E8 00000000 E   *	    call   ExitProcess
 00000069			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27035.0	    03/06/20 09:35:08
AddTwo.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000004 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000069 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000069 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000000A _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000001A _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 0000004F _TEXT	
  L6 . . . . . . . . . . . . . .	L Near	 0000005A _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
temp . . . . . . . . . . . . . .	DWord	 00000000 _DATA	

	   0 Warnings
	   0 Errors
